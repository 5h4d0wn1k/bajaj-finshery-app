/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/8y5bqBP3QMo
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card"
import { Textarea } from "@/components/ui/textarea"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { Select } from "@/components/ui/select"

export function Component() {
  const [jsonInput, setJsonInput] = useState("")
  const [response, setResponse] = useState(null)
  const [selectedFields, setSelectedFields] = useState([])
  const handleJsonInput = (e) => {
    setJsonInput(e.target.value)
  }
  const handleSubmit = async (e) => {
    e.preventDefault()
    try {
      const res = await fetch("YOUR_API_URL", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: jsonInput,
      })
      const data = await res.json()
      setResponse(data)
    } catch (err) {
      console.error(err)
    }
  }
  const handleFieldSelect = (value) => {
    setSelectedFields(value)
  }
  return (
    (<div
      className="flex flex-col items-center justify-center h-screen bg-background">
      <Card className="w-full max-w-md p-6">
        <CardHeader>
          <CardTitle>JSON Data Processor</CardTitle>
          <CardDescription>Input JSON data and see the response from the backend.</CardDescription>
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-4">
            <Textarea
              value={jsonInput}
              onChange={handleJsonInput}
              placeholder="Enter JSON data"
              className="h-32 resize-none"
              required />
            <Button type="submit">Submit</Button>
          </form>
        </CardContent>
        {response && (
          <CardContent>
            <div className="space-y-4">
              <div>
                <Label htmlFor="fields">Selected Fields</Label>
                <Select
                  id="fields"
                  value={selectedFields}
                  isMulti
                  options={Object.keys(response).map((key) => ({
                    value: key,
                    label: key,
                  }))}
                  onValueChange={handleFieldSelect} />
              </div>
              <div>
                <Label htmlFor="response">Response</Label>
                <Textarea
                  id="response"
                  value={JSON.stringify(selectedFields.length
                    ? selectedFields.reduce((obj, key) => {
                        obj[key] = response[key]
                        return obj
                      }, {})
                    : response, null, 2)}
                  className="h-32 resize-none"
                  readOnly />
              </div>
            </div>
          </CardContent>
        )}
      </Card>
    </div>)
  );
}
